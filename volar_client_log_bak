{
  _exec_cmd = <function 1>,
  _on_attach = <function 2>,
  attached_buffers = {
    [253] = true
  },
  cancel_request = <function 3>,
  commands = {},
  config = {
    _on_attach = <function 4>,
    autostart = true,
    capabilities = {
      general = {
        positionEncodings = { "utf-16" }
      },
      textDocument = {
        callHierarchy = {
          dynamicRegistration = false
        },
        codeAction = {
          codeActionLiteralSupport = {
            codeActionKind = {
              valueSet = { "", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }
            }
          },
          dataSupport = true,
          dynamicRegistration = true,
          isPreferredSupport = true,
          resolveSupport = {
            properties = { "edit" }
          }
        },
        completion = {
          completionItem = {
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            insertTextModeSupport = {
              valueSet = { 1, 2 }
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionItemKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
          },
          completionList = {
            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }
          },
          contextSupport = true,
          dynamicRegistration = false,
          insertTextMode = 1
        },
        declaration = {
          linkSupport = true
        },
        definition = {
          dynamicRegistration = true,
          linkSupport = true
        },
        diagnostic = {
          dynamicRegistration = false
        },
        documentHighlight = {
          dynamicRegistration = false
        },
        documentSymbol = {
          dynamicRegistration = false,
          hierarchicalDocumentSymbolSupport = true,
          symbolKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
          }
        },
        formatting = {
          dynamicRegistration = true
        },
        hover = {
          contentFormat = { "markdown", "plaintext" },
          dynamicRegistration = true
        },
        implementation = {
          linkSupport = true
        },
        inlayHint = {
          dynamicRegistration = true,
          resolveSupport = {
            properties = {}
          }
        },
        publishDiagnostics = {
          dataSupport = true,
          relatedInformation = true,
          tagSupport = {
            valueSet = { 1, 2 }
          }
        },
        rangeFormatting = {
          dynamicRegistration = true
        },
        references = {
          dynamicRegistration = false
        },
        rename = {
          dynamicRegistration = true,
          prepareSupport = true
        },
        semanticTokens = {
          augmentsSyntaxTokens = true,
          dynamicRegistration = false,
          formats = { "relative" },
          multilineTokenSupport = false,
          overlappingTokenSupport = true,
          requests = {
            full = {
              delta = true
            },
            range = false
          },
          serverCancelSupport = false,
          tokenModifiers = { "declaration", "definition", "readonly", "static", "deprecated", "abstract", "async", "modification", "documentation", "defaultLibrary" },
          tokenTypes = { "namespace", "type", "class", "enum", "interface", "struct", "typeParameter", "parameter", "variable", "property", "enumMember", "event", "function", "method", "macro", "keyword", "modifier", "comment", "string", "number", "regexp", "operator", "decorator" }
        },
        signatureHelp = {
          dynamicRegistration = false,
          signatureInformation = {
            activeParameterSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            parameterInformation = {
              labelOffsetSupport = true
            }
          }
        },
        synchronization = {
          didSave = true,
          dynamicRegistration = false,
          willSave = true,
          willSaveWaitUntil = true
        },
        typeDefinition = {
          linkSupport = true
        }
      },
      window = {
        showDocument = {
          support = true
        },
        showMessage = {
          messageActionItem = {
            additionalPropertiesSupport = false
          }
        },
        workDoneProgress = true
      },
      workspace = {
        applyEdit = true,
        configuration = true,
        didChangeWatchedFiles = {
          dynamicRegistration = true,
          relativePatternSupport = true
        },
        inlayHint = {
          refreshSupport = true
        },
        semanticTokens = {
          refreshSupport = true
        },
        symbol = {
          dynamicRegistration = false,
          symbolKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
          }
        },
        workspaceEdit = {
          resourceOperations = { "rename", "create", "delete" }
        },
        workspaceFolders = true
      }
    },
    cmd = { "E:\\neovim\\configs\\nvim-data\\mason\\bin\\pyright-langserver.CMD", "--stdio" },
    cmd_cwd = "E:/Projects/PythonProject/huggingchat-api",
    filetypes = { "python" },
    flags = {},
    get_language_id = <function 5>,
    handlers = <1>{},
    init_options = vim.empty_dict(),
    log_level = 2,
    message_level = 2,
    name = "pyright",
    on_attach = <function 6>,
    on_exit = <function 7>,
    on_init = <function 8>,
    on_new_config = <function 9>,
    original_config = {
      autostart = true,
      capabilities = {
        general = {
          positionEncodings = { "utf-16" }
        },
        textDocument = {
          callHierarchy = {
            dynamicRegistration = false
          },
          codeAction = {
            codeActionLiteralSupport = {
              codeActionKind = {
                valueSet = { "", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }
              }
            },
            dataSupport = true,
            dynamicRegistration = true,
            isPreferredSupport = true,
            resolveSupport = {
              properties = { "edit" }
            }
          },
          completion = {
            completionItem = {
              commitCharactersSupport = true,
              deprecatedSupport = true,
              documentationFormat = { "markdown", "plaintext" },
              insertReplaceSupport = true,
              insertTextModeSupport = {
                valueSet = { 1, 2 }
              },
              labelDetailsSupport = true,
              preselectSupport = true,
              resolveSupport = {
                properties = { "documentation", "detail", "additionalTextEdits" }
              },
              snippetSupport = true,
              tagSupport = {
                valueSet = { 1 }
              }
            },
            completionItemKind = {
              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
            },
            completionList = {
              itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }
            },
            contextSupport = true,
            dynamicRegistration = false,
            insertTextMode = 1
          },
          declaration = {
            linkSupport = true
          },
          definition = {
            dynamicRegistration = true,
            linkSupport = true
          },
          diagnostic = {
            dynamicRegistration = false
          },
          documentHighlight = {
            dynamicRegistration = false
          },
          documentSymbol = {
            dynamicRegistration = false,
            hierarchicalDocumentSymbolSupport = true,
            symbolKind = {
              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
            }
          },
          formatting = {
            dynamicRegistration = true
          },
          hover = {
            contentFormat = { "markdown", "plaintext" },
            dynamicRegistration = true
          },
          implementation = {
            linkSupport = true
          },
          inlayHint = {
            dynamicRegistration = true,
            resolveSupport = {
              properties = {}
            }
          },
          publishDiagnostics = {
            dataSupport = true,
            relatedInformation = true,
            tagSupport = {
              valueSet = { 1, 2 }
            }
          },
          rangeFormatting = {
            dynamicRegistration = true
          },
          references = {
            dynamicRegistration = false
          },
          rename = {
            dynamicRegistration = true,
            prepareSupport = true
          },
          semanticTokens = {
            augmentsSyntaxTokens = true,
            dynamicRegistration = false,
            formats = { "relative" },
            multilineTokenSupport = false,
            overlappingTokenSupport = true,
            requests = {
              full = {
                delta = true
              },
              range = false
            },
            serverCancelSupport = false,
            tokenModifiers = { "declaration", "definition", "readonly", "static", "deprecated", "abstract", "async", "modification", "documentation", "defaultLibrary" },
            tokenTypes = { "namespace", "type", "class", "enum", "interface", "struct", "typeParameter", "parameter", "variable", "property", "enumMember", "event", "function", "method", "macro", "keyword", "modifier", "comment", "string", "number", "regexp", "operator", "decorator" }
          },
          signatureHelp = {
            dynamicRegistration = false,
            signatureInformation = {
              activeParameterSupport = true,
              documentationFormat = { "markdown", "plaintext" },
              parameterInformation = {
                labelOffsetSupport = true
              }
            }
          },
          synchronization = {
            didSave = true,
            dynamicRegistration = false,
            willSave = true,
            willSaveWaitUntil = true
          },
          typeDefinition = {
            linkSupport = true
          }
        },
        window = {
          showDocument = {
            support = true
          },
          showMessage = {
            messageActionItem = {
              additionalPropertiesSupport = false
            }
          },
          workDoneProgress = true
        },
        workspace = {
          applyEdit = true,
          configuration = true,
          didChangeWatchedFiles = {
            dynamicRegistration = true,
            relativePatternSupport = true
          },
          inlayHint = {
            refreshSupport = true
          },
          semanticTokens = {
            refreshSupport = true
          },
          symbol = {
            dynamicRegistration = false,
            symbolKind = {
              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
            }
          },
          workspaceEdit = {
            resourceOperations = { "rename", "create", "delete" }
          },
          workspaceFolders = true
        }
      },
      cmd = { "E:\\neovim\\configs\\nvim-data\\mason\\bin\\pyright-langserver.CMD", "--stdio" },
      filetypes = { "python" },
      handlers = {},
      init_options = vim.empty_dict(),
      log_level = 2,
      message_level = 2,
      name = "pyright",
      on_attach = <function 4>,
      on_new_config = <function 9>,
      root_dir = <function 10>,
      settings = {
        python = {
          analysis = {
            autoSearchPaths = true,
            diagnosticMode = "workspace",
            useLibraryCodeForTypes = true
          }
        }
      },
      single_file_support = true
    },
    root_dir = "E:/Projects/PythonProject/huggingchat-api",
    settings = {
      python = {
        analysis = {
          autoSearchPaths = true,
          diagnosticMode = "workspace",
          useLibraryCodeForTypes = true
        }
      }
    },
    single_file_support = true,
    workspace_folders = <2>{ {
        name = "E:/Projects/PythonProject/huggingchat-api",
        uri = "file:///E:/Projects/PythonProject/huggingchat-api"
      } },
    <metatable> = <3>{
      __tostring = <function 11>
    }
  },
  dynamic_capabilities = {
    capabilities = {
      ["workspace/didChangeWatchedFiles"] = { {
          id = "861849d8-bded-4ecc-bfc9-1d758c0d1405",
          method = "workspace/didChangeWatchedFiles",
          registerOptions = {
            watchers = { {
                globPattern = "**/pyrightconfig.json",
                kind = 7
              }, {
                globPattern = "**",
                kind = 7
              }, {
                globPattern = {
                  baseUri = "file:///e%3A/Pythons/py_3.10.5/lib",
                  pattern = "**"
                },
                kind = 7
              }, {
                globPattern = {
                  baseUri = "file:///e%3A/Pythons/py_3.10.5",
                  pattern = "**"
                },
                kind = 7
              }, {
                globPattern = {
                  baseUri = "file:///c%3A/Users/moiiii/AppData/Roaming/Python/Python310/site-packages",
                  pattern = "**"
                },
                kind = 7
              } }
          }
        } }
    },
    client_id = 1,
    <metatable> = {
      __index = {
        get = <function 12>,
        match = <function 13>,
        new = <function 14>,
        register = <function 15>,
        supports = <function 16>,
        supports_registration = <function 17>,
        unregister = <function 18>
      }
    }
  },
  handlers = <table 1>,
  id = 1,
  initialized = true,
  is_stopped = <function 19>,
  messages = {
    messages = {},
    name = "pyright",
    progress = {},
    status = {}
  },
  name = "pyright",
  notify = <function 20>,
  offset_encoding = "utf-16",
  progress = {
    _idx_read = 0,
    _idx_write = 20,
    _items = { {
        token = "3c62fd15-d266-4068-9031-04383a94340f",
        value = {
          kind = "begin",
          title = ""
        }
      }, {
        token = "3c62fd15-d266-4068-9031-04383a94340f",
        value = {
          kind = "report",
          message = "19 files to analyze",
          title = ""
        }
      }, {
        token = "3c62fd15-d266-4068-9031-04383a94340f",
        value = {
          kind = "report",
          message = "18 files to analyze",
          title = ""
        }
      }, {
        token = "3c62fd15-d266-4068-9031-04383a94340f",
        value = {
          kind = "report",
          message = "19 files to analyze",
          title = ""
        }
      }, {
        token = "3c62fd15-d266-4068-9031-04383a94340f",
        value = {
          kind = "report",
          message = "19 files to analyze",
          title = ""
        }
      }, {
        token = "3c62fd15-d266-4068-9031-04383a94340f",
        value = {
          kind = "report",
          message = "17 files to analyze",
          title = ""
        }
      }, {
        token = "3c62fd15-d266-4068-9031-04383a94340f",
        value = {
          kind = "report",
          message = "15 files to analyze",
          title = ""
        }
      }, {
        token = "3c62fd15-d266-4068-9031-04383a94340f",
        value = {
          kind = "report",
          message = "12 files to analyze",
          title = ""
        }
      }, {
        token = "3c62fd15-d266-4068-9031-04383a94340f",
        value = {
          kind = "report",
          message = "8 files to analyze",
          title = ""
        }
      }, {
        token = "3c62fd15-d266-4068-9031-04383a94340f",
        value = {
          kind = "end",
          title = ""
        }
      }, {
        token = "6be335bc-4891-4d44-b3db-1d3eee2ee3bf"
      }, {
        token = "6be335bc-4891-4d44-b3db-1d3eee2ee3bf",
        value = {
          kind = "begin",
          title = ""
        }
      }, {
        token = "6be335bc-4891-4d44-b3db-1d3eee2ee3bf",
        value = {
          kind = "report",
          message = "19 files to analyze",
          title = ""
        }
      }, {
        token = "6be335bc-4891-4d44-b3db-1d3eee2ee3bf",
        value = {
          kind = "report",
          message = "16 files to analyze",
          title = ""
        }
      }, {
        token = "6be335bc-4891-4d44-b3db-1d3eee2ee3bf",
        value = {
          kind = "report",
          message = "19 files to analyze",
          title = ""
        }
      }, {
        token = "6be335bc-4891-4d44-b3db-1d3eee2ee3bf",
        value = {
          kind = "report",
          message = "16 files to analyze",
          title = ""
        }
      }, {
        token = "6be335bc-4891-4d44-b3db-1d3eee2ee3bf",
        value = {
          kind = "report",
          message = "14 files to analyze",
          title = ""
        }
      }, {
        token = "6be335bc-4891-4d44-b3db-1d3eee2ee3bf",
        value = {
          kind = "report",
          message = "11 files to analyze",
          title = ""
        }
      }, {
        token = "6be335bc-4891-4d44-b3db-1d3eee2ee3bf",
        value = {
          kind = "end",
          title = ""
        }
      },
      [0] = {
        token = "3c62fd15-d266-4068-9031-04383a94340f"
      }
    },
    _size = 51,
    pending = {},
    <metatable> = {
      __call = <function 21>,
      __index = {
        clear = <function 22>,
        peek = <function 23>,
        pop = <function 24>,
        push = <function 25>
      }
    }
  },
  request = <function 26>,
  request_sync = <function 27>,
  requests = {},
  rpc = {
    is_closing = <function 28>,
    notify = <function 29>,
    request = <function 30>,
    terminate = <function 31>
  },
  server_capabilities = {
    callHierarchyProvider = true,
    codeActionProvider = {
      codeActionKinds = { "quickfix", "source.organizeImports" },
      workDoneProgress = true
    },
    completionProvider = {
      completionItem = {
        labelDetailsSupport = true
      },
      resolveProvider = true,
      triggerCharacters = { ".", "[", '"', "'" },
      workDoneProgress = true
    },
    declarationProvider = {
      workDoneProgress = true
    },
    definitionProvider = {
      workDoneProgress = true
    },
    documentFormattingProvider = false,
    documentHighlightProvider = {
      workDoneProgress = true
    },
    documentRangeFormattingProvider = false,
    documentSymbolProvider = {
      workDoneProgress = true
    },
    executeCommandProvider = {
      commands = {},
      workDoneProgress = true
    },
    hoverProvider = {
      workDoneProgress = true
    },
    referencesProvider = {
      workDoneProgress = true
    },
    renameProvider = {
      prepareProvider = true,
      workDoneProgress = true
    },
    signatureHelpProvider = {
      triggerCharacters = { "(", ",", ")" },
      workDoneProgress = true
    },
    textDocumentSync = {
      change = 2,
      openClose = true,
      save = {
        includeText = false
      },
      willSave = false,
      willSaveWaitUntil = false
    },
    typeDefinitionProvider = {
      workDoneProgress = true
    },
    workspace = {
      workspaceFolders = {
        changeNotifications = true,
        supported = true
      }
    },
    workspaceSymbolProvider = {
      workDoneProgress = true
    }
  },
  stop = <function 32>,
  supports_method = <function 33>,
  workspace_did_change_configuration = <function 34>,
  workspace_folders = <table 2>
}
