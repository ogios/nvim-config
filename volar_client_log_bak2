{
  _on_attach = <function 1>,
  attached_buffers = {
    [4] = true,
    [5] = true,
    [106] = true
  },
  cancel_request = <function 2>,
  commands = {},
  config = {
    _on_attach = <function 3>,
    autostart = true,
    capabilities = {
      textDocument = {
        [""] = {
          dynamicRegistration = true
        },
        callHierarchy = {
          dynamicRegistration = true
        },
        codeAction = {
          codeActionLiteralSupport = {
            codeActionKind = {
              valueSet = { "", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }
            }
          },
          dataSupport = true,
          dynamicRegistration = true,
          isPreferredSupport = true,
          resolveSupport = {
            properties = { "edit" }
          }
        },
        completion = {
          completionItem = {
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            insertReplaceSupport = true,
            insertTextModeSupport = {
              valueSet = { 1, 2 }
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = {
              properties = { "documentation", "detail", "additionalTextEdits" }
            },
            snippetSupport = true,
            tagSupport = {
              valueSet = { 1 }
            }
          },
          completionItemKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
          },
          completionList = {
            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 1
        },
        declaration = {
          linkSupport = true
        },
        definition = {
          linkSupport = true
        },
        documentHighlight = {
          dynamicRegistration = true
        },
        documentSymbol = {
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          symbolKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
          }
        },
        hover = {
          contentFormat = { "markdown", "plaintext" },
          dynamicRegistration = true
        },
        implementation = {
          linkSupport = true
        },
        publishDiagnostics = {
          relatedInformation = true,
          tagSupport = {
            valueSet = { 1, 2 }
          }
        },
        references = {
          dynamicRegistration = true
        },
        rename = {
          dynamicRegistration = true,
          prepareSupport = true
        },
        semanticTokens = {
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { "relative" },
          multilineTokenSupport = false,
          overlappingTokenSupport = true,
          requests = {
            full = {
              delta = true
            },
            range = false
          },
          serverCancelSupport = false,
          tokenModifiers = { "declaration", "definition", "readonly", "static", "deprecated", "abstract", "async", "modification", "documentation", "defaultLibrary" },
          tokenTypes = { "namespace", "type", "class", "enum", "interface", "struct", "typeParameter", "parameter", "variable", "property", "enumMember", "event", "function", "method", "macro", "keyword", "modifier", "comment", "string", "number", "regexp", "operator", "decorator" }
        },
        signatureHelp = {
          dynamicRegistration = true,
          signatureInformation = {
            activeParameterSupport = true,
            documentationFormat = { "markdown", "plaintext" },
            parameterInformation = {
              labelOffsetSupport = true
            }
          }
        },
        synchronization = {
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true
        },
        typeDefinition = {
          linkSupport = true
        }
      },
      window = {
        showDocument = {
          support = true
        },
        showMessage = {
          messageActionItem = {
            additionalPropertiesSupport = false
          }
        },
        workDoneProgress = true
      },
      workspace = {
        applyEdit = true,
        configuration = true,
        didChangeWatchedFiles = {
          dynamicRegistration = false,
          relativePatternSupport = true
        },
        semanticTokens = {
          refreshSupport = true
        },
        symbol = {
          dynamicRegistration = false,
          hierarchicalWorkspaceSymbolSupport = true,
          symbolKind = {
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
          }
        },
        workspaceEdit = {
          resourceOperations = { "rename", "create", "delete" }
        },
        workspaceFolders = true
      }
    },
    cmd = { "/home/ogios/.local/share/nvim/mason/bin/vue-language-server", "--stdio" },
    cmd_cwd = "/home/ogios/work/nsfocus/nsdeca_front",
    documentFeatures = {
      documentFormatting = {
        defaultPrintWidth = 60
      }
    },
    filetypes = { "typescript", "javascript", "javascriptreact", "typescriptreact", "vue", "json" },
    flags = {},
    get_language_id = <function 4>,
    handlers = <1>{},
    init_options = {
      typescript = {
        tsdk = "/home/ogios/work/nsfocus/nsdeca_front/node_modules/typescript/lib"
      },
      vue = {
        autoInsert = {
          dotValue = true
        },
        server = {
          diagnosticModel = "push"
        },
        updateImportsOnFileMove = {
          enabled = true
        }
      }
    },
    log_level = 2,
    message_level = 2,
    name = "volar",
    on_attach = <function 5>,
    on_exit = <function 6>,
    on_init = <function 7>,
    on_new_config = <function 8>,
    original_config = {
      autostart = true,
      capabilities = {
        textDocument = {
          [""] = {
            dynamicRegistration = true
          },
          callHierarchy = {
            dynamicRegistration = true
          },
          codeAction = {
            codeActionLiteralSupport = {
              codeActionKind = {
                valueSet = { "", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }
              }
            },
            dataSupport = true,
            dynamicRegistration = true,
            isPreferredSupport = true,
            resolveSupport = {
              properties = { "edit" }
            }
          },
          completion = {
            completionItem = {
              commitCharactersSupport = true,
              deprecatedSupport = true,
              documentationFormat = { "markdown", "plaintext" },
              insertReplaceSupport = true,
              insertTextModeSupport = {
                valueSet = { 1, 2 }
              },
              labelDetailsSupport = true,
              preselectSupport = true,
              resolveSupport = {
                properties = { "documentation", "detail", "additionalTextEdits" }
              },
              snippetSupport = true,
              tagSupport = {
                valueSet = { 1 }
              }
            },
            completionItemKind = {
              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
            },
            completionList = {
              itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }
            },
            contextSupport = true,
            dynamicRegistration = true,
            insertTextMode = 1
          },
          declaration = {
            linkSupport = true
          },
          definition = {
            linkSupport = true
          },
          documentHighlight = {
            dynamicRegistration = true
          },
          documentSymbol = {
            dynamicRegistration = true,
            hierarchicalDocumentSymbolSupport = true,
            symbolKind = {
              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
            }
          },
          hover = {
            contentFormat = { "markdown", "plaintext" },
            dynamicRegistration = true
          },
          implementation = {
            linkSupport = true
          },
          publishDiagnostics = {
            relatedInformation = true,
            tagSupport = {
              valueSet = { 1, 2 }
            }
          },
          references = {
            dynamicRegistration = true
          },
          rename = {
            dynamicRegistration = true,
            prepareSupport = true
          },
          semanticTokens = {
            augmentsSyntaxTokens = true,
            dynamicRegistration = true,
            formats = { "relative" },
            multilineTokenSupport = false,
            overlappingTokenSupport = true,
            requests = {
              full = {
                delta = true
              },
              range = false
            },
            serverCancelSupport = false,
            tokenModifiers = { "declaration", "definition", "readonly", "static", "deprecated", "abstract", "async", "modification", "documentation", "defaultLibrary" },
            tokenTypes = { "namespace", "type", "class", "enum", "interface", "struct", "typeParameter", "parameter", "variable", "property", "enumMember", "event", "function", "method", "macro", "keyword", "modifier", "comment", "string", "number", "regexp", "operator", "decorator" }
          },
          signatureHelp = {
            dynamicRegistration = true,
            signatureInformation = {
              activeParameterSupport = true,
              documentationFormat = { "markdown", "plaintext" },
              parameterInformation = {
                labelOffsetSupport = true
              }
            }
          },
          synchronization = {
            didSave = true,
            dynamicRegistration = true,
            willSave = true,
            willSaveWaitUntil = true
          },
          typeDefinition = {
            linkSupport = true
          }
        },
        window = {
          showDocument = {
            support = true
          },
          showMessage = {
            messageActionItem = {
              additionalPropertiesSupport = false
            }
          },
          workDoneProgress = true
        },
        workspace = {
          applyEdit = true,
          configuration = true,
          didChangeWatchedFiles = {
            dynamicRegistration = false,
            relativePatternSupport = true
          },
          semanticTokens = {
            refreshSupport = true
          },
          symbol = {
            dynamicRegistration = false,
            hierarchicalWorkspaceSymbolSupport = true,
            symbolKind = {
              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
            }
          },
          workspaceEdit = {
            resourceOperations = { "rename", "create", "delete" }
          },
          workspaceFolders = true
        }
      },
      cmd = { "/home/ogios/.local/share/nvim/mason/bin/vue-language-server", "--stdio" },
      documentFeatures = {
        documentFormatting = {
          defaultPrintWidth = 60
        }
      },
      filetypes = { "typescript", "javascript", "javascriptreact", "typescriptreact", "vue", "json" },
      handlers = {},
      init_options = {
        typescript = {
          tsdk = "/home/ogios/work/nsfocus/nsdeca_front/node_modules/typescript/lib"
        },
        vue = {
          autoInsert = {
            dotValue = true
          },
          server = {
            diagnosticModel = "push"
          },
          updateImportsOnFileMove = {
            enabled = true
          }
        }
      },
      log_level = 2,
      message_level = 2,
      name = "volar",
      on_attach = <function 3>,
      on_new_config = <function 8>,
      root_dir = <function 9>,
      settings = {
        vue = {
          autoInsert = {
            dotValue = true
          },
          server = {
            diagnosticModel = "push"
          },
          updateImportsOnFileMove = {
            enabled = true
          }
        }
      }
    },
    root_dir = "/home/ogios/work/nsfocus/nsdeca_front",
    settings = {
      vue = {
        autoInsert = {
          dotValue = true
        },
        server = {
          diagnosticModel = "push"
        },
        updateImportsOnFileMove = {
          enabled = true
        }
      }
    },
    workspace_folders = <2>{ {
        name = "/home/ogios/work/nsfocus/nsdeca_front",
        uri = "file:///home/ogios/work/nsfocus/nsdeca_front"
      } },
    <metatable> = {
      __tostring = <function 10>
    }
  },
  handlers = <table 1>,
  id = 1,
  initialized = true,
  is_stopped = <function 11>,
  messages = {
    messages = {},
    name = "volar",
    progress = {},
    status = {}
  },
  name = "volar",
  notify = <function 12>,
  offset_encoding = "utf-16",
  request = <function 13>,
  request_sync = <function 14>,
  requests = {},
  rpc = {
    is_closing = <function 15>,
    notify = <function 16>,
    request = <function 17>,
    terminate = <function 18>
  },
  server_capabilities = {
    callHierarchyProvider = true,
    codeActionProvider = {
      codeActionKinds = { "", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.fixAll", "source.organizeImports" },
      resolveProvider = true
    },
    codeLensProvider = {
      resolveProvider = true
    },
    colorProvider = true,
    completionProvider = {
      resolveProvider = true,
      triggerCharacters = { ".", '"', "'", "`", "/", "<", "@", "#", " ", "*", ":", "=", "-", ">", "+", "^", "(", ")", "[", "]", "$", "{", "}" }
    },
    definitionProvider = true,
    documentFormattingProvider = false,
    documentHighlightProvider = true,
    documentLinkProvider = {
      resolveProvider = true
    },
    documentOnTypeFormattingProvider = {
      firstTriggerCharacter = ";",
      moreTriggerCharacter = { "}", "\n" }
    },
    documentRangeFormattingProvider = false,
    documentSymbolProvider = true,
    foldingRangeProvider = true,
    hoverProvider = true,
    implementationProvider = true,
    inlayHintProvider = {
      resolveProvider = true
    },
    linkedEditingRangeProvider = true,
    referencesProvider = true,
    renameProvider = {
      prepareProvider = true
    },
    selectionRangeProvider = true,
    semanticTokensProvider = {
      full = false,
      legend = {
        tokenModifiers = { "declaration", "definition", "readonly", "static", "deprecated", "abstract", "async", "modification", "documentation", "defaultLibrary" },
        tokenTypes = { "namespace", "class", "enum", "interface", "struct", "typeParameter", "type", "parameter", "variable", "property", "enumMember", "decorator", "event", "function", "method", "macro", "label", "comment", "string", "keyword", "number", "regexp", "operator" }
      },
      range = true
    },
    signatureHelpProvider = {
      retriggerCharacters = { ")" },
      triggerCharacters = { "(", ",", "<" }
    },
    textDocumentSync = {
      change = 2,
      openClose = true,
      save = {
        includeText = false
      },
      willSave = false,
      willSaveWaitUntil = false
    },
    typeDefinitionProvider = true,
    workspace = {
      didChangeWatchedFiles = {
        dynamicRegistration = true
      },
      didChangeWorkspaceFolders = {
        dynamicRegistration = true
      },
      didCreate = {
        dynamicRegistration = true
      },
      didDelete = {
        dynamicRegistration = true
      },
      didRename = {
        dynamicRegistration = true
      },
      fileOperations = {
        didChangeWatchedFiles = true,
        didChangeWorkspaceFolders = true,
        didCreate = true,
        didDelete = true,
        didRename = true,
        dynamicRegistration = true,
        fileOperations = true,
        symbol = true,
        willRename = {
          filters = { {
              pattern = {
                glob = "**/*.{js,cjs,mjs,ts,cts,mts,jsx,tsx,json,vue}"
              }
            } }
        }
      },
      symbol = {
        dynamicRegistration = true
      }
    },
    workspaceSymbolProvider = true
  },
  stop = <function 19>,
  supports_method = <function 20>,
  workspace_did_change_configuration = <function 21>,
  workspace_folders = <table 2>
}
